import asyncio
import os
import json
import random
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—ã
with open("cards.json", "r", encoding="utf-8") as f:
    cards = json.load(f)

# –ö–Ω–æ–ø–∫–∏
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton("üîÆ –ö–∞—Ä—Ç–∞ –¥–Ω—è"))

@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø TaroWhisper. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É –¥–Ω—è ‚ú®",
        reply_markup=keyboard
    )

@dp.message_handler(lambda message: message.text == "üîÆ –ö–∞—Ä—Ç–∞ –¥–Ω—è")
async def card_of_the_day(message: types.Message):
    card = random.choice(cards)
    await message.answer_photo(
        card["image"],
        caption=f"**{card['name']}**\n\n{card['meaning']}",
        parse_mode="Markdown"
    )

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
